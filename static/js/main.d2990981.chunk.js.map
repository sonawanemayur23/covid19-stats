{"version":3,"sources":["components/Footer.js","constants/theme.js","util/numberFormat.js","components/TotalCasesCards.js","api/index.js","util/getTime.js","components/CasesTable.js","components/Home.js","components/About.js","components/Resources.js","components/StateDetails.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","Layout","AppFooter","style","textAlign","Theme","color","primary","active","confirmed","recovered","deaths","white","black","size","xs","sm","md","xl","xxl","xxxl","padding","weight","normal","bold","bolder","numberFormat","number","Intl","NumberFormat","format","Title","Typography","TotalCasesCards","dataSource","data","statewise","filter","sta","state","map","title","delta","deltaconfirmed","deltarecovered","deltadeaths","styles","item","borderRadius","background","boxShadow","className","lg","fontSize","cursor","level","grid","gutter","renderItem","Item","fontWeight","instance","url","axios","create","baseURL","path","stateDistrict","getTime","date","myDate","year","split","time","Date","CasesTable","history","console","log","Table","responsive","hover","entry","index","includes","onClick","push","scope","moment","lastupdatedtime","fromNow","Home","props","useState","setData","useEffect","API","get","then","res","catch","err","About","Resources","StateDetails","match","stateData","setStateData","stateName","params","name","districtData","Object","keys","goBack","ArrowUpOutlined","Content","AppContent","marginLeft","marginRight","marginTop","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2990981.chunk.js","sourcesContent":["import React from 'react'\nimport { Layout } from 'antd'; \n\nconst {Footer} = Layout;\nexport default function AppFooter() {\n    return (\n        <Footer style={{ textAlign: 'center' }}>\n            \n            <p>All data is provided by covid19india.org, volunteer driven, crowdsourced tracker for Covid19 cases in India.</p>\n            <b>Built by Mayur Sonawane.</b></Footer>\n    )\n}\n","const Theme = {\n    color: {\n        primary: \"#6A1B4D\",\n        active: \"blue\",\n        confirmed: \"#E83A59\",\n        recovered: \"#1FAA59\",\n        deaths: '#242B2E',\n        white:\"#fff\",\n        black:\"#000\"\n    },\n    size:{\n        // xs:\"0.5vw\",\n        // sm:\"1vw\",\n        // md:\"1.5vw\",\n        // xl:\"1.5vw\",\n        // xxl:\"2vw\",\n        // xxxl:\"2.2vw\"\n        xs:\"10px\",\n        sm:\"12px\",\n        md:\"16px\",\n        xl:\"18px\",\n        xxl:\"28px\",\n        xxxl:\"36px\"\n    },\n    padding:{\n        xs:\"2px\",\n        sm:\"4px\",\n        md:\"8px\",\n        xl:\"16px\",\n        xxl:\"32px\",\n        xxxl:\"64px\"\n    },\n    weight:{\n        normal:300,\n        bold:700,\n        bolder:\"bolder\"\n    }\n}\n\nexport default Theme","const numberFormat=(number)=>{\n    return new Intl.NumberFormat().format(number)\n}\n\nexport default numberFormat","import React from \"react\";\nimport { Row, Col, Typography, List, Card } from \"antd\";\nimport Theme from \"../constants/theme\";\nimport numberFormat from \"../util/numberFormat\";\nconst { Title } = Typography;\n\nexport default function TotalCasesCards({ data }) {\n  const stateTotal = data.statewise.filter((sta) => sta.state === \"Total\");\n  const dataSource = stateTotal.map((state) => {\n    return state.state === \"Total\"\n      ? [\n          {\n            title: \"Confirmed\",\n            data: state.confirmed,\n            delta: state.deltaconfirmed,\n          },\n          {\n            title: \"Active\",\n            data: state.active,\n            delta: 0,\n          },\n          {\n            title: \"Recovered\",\n            data: state.recovered,\n            delta: state.deltarecovered,\n          },\n          {\n            title: \"Deceased\",\n            data: state.deaths,\n            delta: state.deltadeaths,\n          },\n        ]\n      : [];\n  });\n\n  \n  const styles = (item) => {\n    if (item.title === \"Confirmed\") {\n      return {\n        color: Theme.color.confirmed,\n        borderRadius: 10,\n        background: `linear-gradient(180deg, #f2cbd0 0%, #f2cbd0 100%)`,\n        boxShadow:\" 4px 4px 2px 0px lightgray\"\n      };\n    }\n    if (item.title === \"Active\") {\n      return {\n        color: Theme.color.active,\n        borderRadius: 10,\n        background: `linear-gradient(180deg, #cbccf2 0%,  #cbccf2 100%)`,\n        boxShadow:\" 4px 4px 2px 0px lightgray\"\n      };\n    }\n    if (item.title === \"Recovered\") {\n      return {\n        color: Theme.color.recovered,\n        borderRadius: 10,\n        background: `linear-gradient(180deg, #cef2cb 0%, #cef2cb 100%)`,\n        boxShadow:\" 4px 4px 2px 0px lightgray\"\n      };\n    }\n    if (item.title === \"Deceased\") {\n      return {\n        color: Theme.color.deaths,\n        borderRadius: 10,\n        background: `linear-gradient(180deg, #c1c6c1 0%, #c1c6c1 100%)`,\n        boxShadow:\" 4px 4px 2px 0px lightgray\"\n      };\n    }\n  };\n  return (\n    <div className=\"cards\">\n      <Row>\n        <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n        <Col xs={20} sm={16} md={12} lg={8} xl={16}>\n          <Row>\n            \n            <Title style={{ fontSize: Theme.size.xxxl,color:Theme.color.primary,cursor:\"pointer\" }}level={4}>\n              COVID19 INDIA ❤️ \n            </Title>\n          </Row>\n\n          <List \n          \n            grid={{\n              gutter: 16,\n              xs: 2,\n              sm: 2,\n              md: 2,\n              lg: 2,\n              xl: 4,\n              xxl: 4,\n            }}\n            dataSource={dataSource[0]}\n            renderItem={(item) => (\n              <List.Item>\n                <Card style={styles(item)}>\n                  <Row>\n                    \n                    <span\n                      style={{\n                        fontSize: Theme.size.md,\n                      }}\n                    >\n                      {item.title}\n                    </span>\n                  </Row>\n                  \n                  <Row>\n                    \n                    {item.delta !== 0 ?   (\n                      <span style={{ fontSize: Theme.size.sm }}>\n                        \n                        + {numberFormat(item.delta)}\n                      </span>\n                    ):  <span style={{ fontSize: Theme.size.sm }}>\n                        \n                        🕐\n                  </span>}\n                  </Row>\n                  <Row>\n                    <span\n                      style={{\n                        fontSize: Theme.size.xl,\n                        fontWeight: Theme.weight.bolder,\n                      }}\n                    >\n                      {numberFormat(item.data)}\n                    </span>\n                  </Row>\n                </Card>\n              </List.Item>\n            )}\n          />\n        </Col>\n        <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n      </Row>\n    </div>\n  );\n}\n","import axios from 'axios'\n\n\nconst instance = {\n    url:axios.create({\n        baseURL: 'https://api.covid19india.org/',\n      }),\n      path:{\n        data:'data.json',\n        stateDistrict:\"state_district_wise.json\"\n      }\n}\n\nexport default instance;","const getTime=(date)=>{\n    var myDate = date;\n    myDate = myDate.split(\"/\");\n    var year=myDate[2].split(\" \");\n    var time=year[1].split(\":\")\n    var newDate = new Date( year[0], myDate[1] - 1, myDate[0],time[0], time[1], time[2] );\n    return newDate.getTime();\n}\nexport default getTime;","import React from \"react\";\nimport { Table } from \"reactstrap\";\nimport { Row, Col } from \"antd\";\nimport numberFormat from \"../util/numberFormat\";\nimport getTime from \"../util/getTime\";\nimport moment from \"moment\";\nimport Theme from \"../constants/theme\";\nexport default function CasesTable({ data,history }) {\n  console.log(history);\n  return (\n    <Row>\n      <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n      <Col xs={20} sm={16} md={12} lg={8} xl={16}>\n     \n        <Table responsive size=\"sm\" hover>\n          <thead>\n            <tr style={{color:Theme.color.primary}}>\n              <th>State</th>\n              <th>Confirmed</th>\n              <th>Active</th>\n              <th>Recovered</th>\n              <th>Deceased</th>\n              <th>Update</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.statewise.map((entry, index) => (\n                entry.state.includes(\"Total\" ) ||  entry.state.includes(\"State Unassigned\") ?\n             null :(<tr key={index} onClick={()=>history.push(`/state-details/${entry.state}`)}>\n                <th scope=\"row\" style={{color:Theme.color.primary}}>{entry.state}</th>\n                <td style={{color:Theme.color.confirmed}}>{numberFormat(entry.confirmed)}</td>\n                <td style={{color:Theme.color.active}}>{numberFormat(entry.active)}</td>\n                <td style={{color:Theme.color.recovered}}>{numberFormat(entry.recovered)}</td>\n                <td style={{color:Theme.color.deaths}}>{numberFormat(entry.deaths)}</td>\n                <td style={{color:\"gray\"}}><small>{moment(getTime(entry.lastupdatedtime)).fromNow()}</small></td>\n              </tr>)\n            ))}\n          </tbody>\n        </Table>\n      </Col>\n      <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n    </Row>\n  );\n}\n","import React,{useEffect,useState} from \"react\";\nimport TotalCasesCards from \"./TotalCasesCards\"\nimport API from \"../api/index\";\nimport CasesTable from \"./CasesTable\"\n\nexport default function Home(props) {\nconst [data, setData] = useState(null)\n  useEffect(() => {\n    API.url.get(API.path.data)\n    .then(res=>setData(res.data))\n    .catch(err=>console.log(err))\n    \n  }, [])\n\n  return (\n    <div>\n     \n     {data && <TotalCasesCards data={data} {...props}/>}\n     {data && <CasesTable data={data} {...props}/>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nexport default function About() {\n  return (\n    <div>\n      <Row>\n        <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n        <Col xs={20} sm={16} md={12} lg={8} xl={16}>\n            <h1>About</h1>\n          You will find that any event which causes the chart to re-render, such\n          as hover tooltips, etc., will cause the first dataset to be copied\n          over to other datasets, causing your lines and bars to merge together.\n          This is because to track changes in the dataset series, the library\n          needs a key to be specified - if none is found, it can't tell the\n          difference between the datasets while updating. To get around this\n          issue, you can take these two approaches:\n        </Col>\n        <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nexport default function Resources() {\n  return (\n    <div>\n      <Row>\n        <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n        <Col xs={20} sm={16} md={12} lg={8} xl={16}>\n        <h1>Resources</h1>\n          You will find that any event which causes the chart to re-render, such\n          as hover tooltips, etc., will cause the first dataset to be copied\n          over to other datasets, causing your lines and bars to merge together.\n          This is because to track changes in the dataset series, the library\n          needs a key to be specified - if none is found, it can't tell the\n          difference between the datasets while updating. To get around this\n          issue, you can take these two approaches:\n        </Col>\n        <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../api/index\";\nimport { Table } from \"reactstrap\";\nimport { Row, Col,Typography } from \"antd\";\nimport numberFormat from \"../util/numberFormat\";\nimport Theme from \"../constants/theme\";\nimport { ArrowUpOutlined } from \"@ant-design/icons\";\nexport default function StateDetails({ match, history }) {\n  const [data, setData] = useState(null);\n  const [stateData, setStateData] = useState(null);\n  const { Title } = Typography;\n  const stateName = match.params.name;\n  useEffect(() => {\n    \n    API.url\n      .get(API.path.stateDistrict)\n      .then((res) => {\n        setData(res.data[stateName]?.districtData);\n        setStateData(Object.keys(res.data[stateName]?.districtData));\n      })\n      .catch((err) => console.log(err));\n  }, [match,stateName ]);\n  console.log(data);\n  return (\n    <Row>\n      <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n      <Col xs={20} sm={16} md={12} lg={8} xl={16}>\n      <Row>\n            \n            <Title  onClick={()=>history.goBack()} style={{ fontSize: Theme.size.xxxl,color:Theme.color.primary,cursor:\"pointer\" }} level={4}>\n              COVID19 INDIA ❤️ \n            </Title>\n          </Row>\n\n          <Row>\n            \n            <Title style={{ fontSize: Theme.size.xxl,color:Theme.color.primary }} level={4}>\n              {stateName}\n            </Title>\n          </Row>\n\n        {stateData && (\n          <Table responsive size=\"sm\" hover>\n            <thead>\n              <tr style={{color:Theme.color.primary}}>\n                <th>District</th>\n                <th>Confirmed</th>\n                <th>Active</th>\n                <th>Recovered</th>\n                <th>Deceased</th>\n              </tr>\n            </thead>\n            <tbody>\n              {stateData.map((entry, index) => (\n                <tr\n                  key={index}\n                  \n                >\n                  <th scope=\"row\" style={{color:Theme.color.primary}}>{entry}</th>\n                  <td style={{ color: Theme.color.confirmed }}>\n                    {numberFormat(data[entry][\"confirmed\"])}\n                    <small style={{ padding: Theme.padding.md }}>\n                      {\" \"}\n                      <ArrowUpOutlined />{\" \"}\n                      {numberFormat(data[entry][\"delta\"][\"confirmed\"])}\n                    </small>\n                  </td>\n                  <td style={{ color: Theme.color.active }}>\n                    {numberFormat(data[entry][\"active\"])}\n                   \n                  </td>\n                  <td style={{ color: Theme.color.recovered }}>\n                    {numberFormat(data[entry][\"recovered\"])}\n                    <small style={{ padding: Theme.padding.md }}>\n                      {\" \"}\n                      <ArrowUpOutlined />{\" \"}\n                      {numberFormat(data[entry][\"delta\"][\"recovered\"])}\n                    </small>\n                  </td>\n                  <td style={{ color: Theme.color.deaths }}>\n                    {numberFormat(data[entry][\"deceased\"])}\n                    <small style={{ padding: Theme.padding.md }}>\n                      {\" \"}\n                      <ArrowUpOutlined />{\" \"}\n                      {numberFormat(data[entry][\"delta\"][\"deceased\"])}\n                    </small>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n      <Col xs={2} sm={4} md={6} lg={8} xl={4}></Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\"\nimport Resources from \"./Resources\";\nimport StateDetails from \"./StateDetails\"\nconst { Content } = Layout;\nexport default function AppContent() {\n  return (\n    <Content style={{ marginLeft: \"5%\", marginRight: \"5%\",marginTop:\"2rem\" }}>\n      <div className=\"site-layout-background\" >\n        <HashRouter>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/resources\" component={Resources} />\n            <Route path=\"/state-details/:name\" component={StateDetails} />\n          </Switch>\n        </HashRouter>\n      </div>\n    </Content>\n  );\n}\n","import { Layout } from \"antd\";\n//  import Sidebar from \"./components/Sidebar\"\nimport Footer from \"./components/Footer\";\nimport Content from \"./components/Content\";\nexport default function App() {\n  return (\n    <Layout>\n      {/* <Sidebar/> */}\n      <Content />\n      <Footer />\n    </Layout>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}