(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[0],{124:function(e,t,c){},162:function(e,t,c){"use strict";c.r(t);var s=c(0),r=c.n(s),a=c(22),i=c.n(a),n=(c(124),c(170)),l=c(6),d=n.a.Footer;function o(){return Object(l.jsxs)(d,{style:{textAlign:"center"},children:[Object(l.jsx)("p",{children:"All data is provided by covid19india.org, volunteer driven, crowdsourced tracker for Covid19 cases in India."}),Object(l.jsx)("b",{children:"Built by Mayur Sonawane."})]})}var j=c(114),x=c(23),h=c(91),b=c(67),u=c(169),O=c(61),m=c(40),p=c(167),g=c(168),f={color:{primary:"#6A1B4D",active:"blue",confirmed:"#E83A59",recovered:"#1FAA59",deaths:"#242B2E",white:"#fff",black:"#000"},size:{xs:"10px",sm:"12px",md:"16px",xl:"18px",xxl:"28px",xxxl:"36px"},padding:{xs:"2px",sm:"4px",md:"8px",xl:"16px",xxl:"32px",xxxl:"64px"},weight:{normal:300,bold:700,bolder:"bolder"}},v=function(e){return(new Intl.NumberFormat).format(e)},y=u.a.Title;function w(e){var t=e.data.statewise.filter((function(e){return"Total"===e.state})).map((function(e){return"Total"===e.state?[{title:"Confirmed",data:e.confirmed,delta:e.deltaconfirmed},{title:"Active",data:e.active,delta:0},{title:"Recovered",data:e.recovered,delta:e.deltarecovered},{title:"Deceased",data:e.deaths,delta:e.deltadeaths}]:[]})),c=function(e){return"Confirmed"===e.title?{color:f.color.confirmed,borderRadius:10,background:"linear-gradient(180deg, #f2cbd0 0%, #f2cbd0 100%)",boxShadow:" 4px 4px 2px 0px lightgray"}:"Active"===e.title?{color:f.color.active,borderRadius:10,background:"linear-gradient(180deg, #cbccf2 0%,  #cbccf2 100%)",boxShadow:" 4px 4px 2px 0px lightgray"}:"Recovered"===e.title?{color:f.color.recovered,borderRadius:10,background:"linear-gradient(180deg, #cef2cb 0%, #cef2cb 100%)",boxShadow:" 4px 4px 2px 0px lightgray"}:"Deceased"===e.title?{color:f.color.deaths,borderRadius:10,background:"linear-gradient(180deg, #c1c6c1 0%, #c1c6c1 100%)",boxShadow:" 4px 4px 2px 0px lightgray"}:void 0};return Object(l.jsx)("div",{className:"cards",children:Object(l.jsxs)(O.a,{children:[Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4}),Object(l.jsxs)(m.a,{xs:20,sm:16,md:12,lg:8,xl:16,children:[Object(l.jsx)(O.a,{children:Object(l.jsx)(y,{style:{fontSize:f.size.xxxl,color:f.color.primary,cursor:"pointer"},level:4,children:"COVID19 INDIA \u2764\ufe0f"})}),Object(l.jsx)(p.b,{grid:{gutter:16,xs:2,sm:2,md:2,lg:2,xl:4,xxl:4},dataSource:t[0],renderItem:function(e){return Object(l.jsx)(p.b.Item,{children:Object(l.jsxs)(g.a,{style:c(e),children:[Object(l.jsx)(O.a,{children:Object(l.jsx)("span",{style:{fontSize:f.size.md},children:e.title})}),Object(l.jsx)(O.a,{children:0!==e.delta?Object(l.jsxs)("span",{style:{fontSize:f.size.sm},children:["+ ",v(e.delta)]}):Object(l.jsx)("span",{style:{fontSize:f.size.sm},children:"\ud83d\udd50"})}),Object(l.jsx)(O.a,{children:Object(l.jsx)("span",{style:{fontSize:f.size.xl,fontWeight:f.weight.bolder},children:v(e.data)})})]})})}})]}),Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4})]})})}var S=c(112),k={url:c.n(S).a.create({baseURL:"https://api.covid19india.org/"}),path:{data:"data.json",stateDistrict:"state_district_wise.json"}},z=c(171),D=function(e){var t=e,c=(t=t.split("/"))[2].split(" "),s=c[1].split(":");return new Date(c[0],t[1]-1,t[0],s[0],s[1],s[2]).getTime()},A=c(113),C=c.n(A);function T(e){var t=e.data,c=e.history;return console.log(c),Object(l.jsxs)(O.a,{children:[Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4}),Object(l.jsx)(m.a,{xs:20,sm:16,md:12,lg:8,xl:16,children:Object(l.jsxs)(z.a,{responsive:!0,size:"sm",hover:!0,children:[Object(l.jsx)("thead",{children:Object(l.jsxs)("tr",{style:{color:f.color.primary},children:[Object(l.jsx)("th",{children:"State"}),Object(l.jsx)("th",{children:"Confirmed"}),Object(l.jsx)("th",{children:"Active"}),Object(l.jsx)("th",{children:"Recovered"}),Object(l.jsx)("th",{children:"Deceased"}),Object(l.jsx)("th",{children:"Update"})]})}),Object(l.jsx)("tbody",{children:t.statewise.map((function(e,t){return e.state.includes("Total")||e.state.includes("State Unassigned")?null:Object(l.jsxs)("tr",{onClick:function(){return c.push("/state-details/".concat(e.state))},children:[Object(l.jsx)("th",{scope:"row",style:{color:f.color.primary},children:e.state}),Object(l.jsx)("td",{style:{color:f.color.confirmed},children:v(e.confirmed)}),Object(l.jsx)("td",{style:{color:f.color.active},children:v(e.active)}),Object(l.jsx)("td",{style:{color:f.color.recovered},children:v(e.recovered)}),Object(l.jsx)("td",{style:{color:f.color.deaths},children:v(e.deaths)}),Object(l.jsx)("td",{style:{color:"gray"},children:Object(l.jsx)("small",{children:C()(D(e.lastupdatedtime)).fromNow()})})]},t)}))})]})}),Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4})]})}function I(e){var t=Object(s.useState)(null),c=Object(b.a)(t,2),r=c[0],a=c[1];return Object(s.useEffect)((function(){k.url.get(k.path.data).then((function(e){return a(e.data)})).catch((function(e){return console.log(e)}))}),[]),Object(l.jsxs)("div",{children:[r&&Object(l.jsx)(w,Object(h.a)({data:r},e)),r&&Object(l.jsx)(T,Object(h.a)({data:r},e))]})}function R(){return Object(l.jsx)("div",{children:Object(l.jsxs)(O.a,{children:[Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4}),Object(l.jsxs)(m.a,{xs:20,sm:16,md:12,lg:8,xl:16,children:[Object(l.jsx)("h1",{children:"About"}),"You will find that any event which causes the chart to re-render, such as hover tooltips, etc., will cause the first dataset to be copied over to other datasets, causing your lines and bars to merge together. This is because to track changes in the dataset series, the library needs a key to be specified - if none is found, it can't tell the difference between the datasets while updating. To get around this issue, you can take these two approaches:"]}),Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4})]})})}function F(){return Object(l.jsx)("div",{children:Object(l.jsxs)(O.a,{children:[Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4}),Object(l.jsxs)(m.a,{xs:20,sm:16,md:12,lg:8,xl:16,children:[Object(l.jsx)("h1",{children:"Resources"}),"You will find that any event which causes the chart to re-render, such as hover tooltips, etc., will cause the first dataset to be copied over to other datasets, causing your lines and bars to merge together. This is because to track changes in the dataset series, the library needs a key to be specified - if none is found, it can't tell the difference between the datasets while updating. To get around this issue, you can take these two approaches:"]}),Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4})]})})}var B=c(172);function N(e){var t=e.match,c=e.history,r=Object(s.useState)(null),a=Object(b.a)(r,2),i=a[0],n=a[1],d=Object(s.useState)(null),o=Object(b.a)(d,2),j=o[0],x=o[1],h=u.a.Title,p=t.params.name;return Object(s.useEffect)((function(){k.url.get(k.path.stateDistrict).then((function(e){var t,c;n(null===(t=e.data[p])||void 0===t?void 0:t.districtData),x(Object.keys(null===(c=e.data[p])||void 0===c?void 0:c.districtData))})).catch((function(e){return console.log(e)}))}),[t,p]),console.log(i),Object(l.jsxs)(O.a,{children:[Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4}),Object(l.jsxs)(m.a,{xs:20,sm:16,md:12,lg:8,xl:16,children:[Object(l.jsx)(O.a,{children:Object(l.jsx)(h,{onClick:function(){return c.goBack()},style:{fontSize:f.size.xxxl,color:f.color.primary,cursor:"pointer"},level:4,children:"COVID19 INDIA \u2764\ufe0f"})}),Object(l.jsx)(O.a,{children:Object(l.jsx)(h,{style:{fontSize:f.size.xxl,color:f.color.primary},level:4,children:p})}),j&&Object(l.jsxs)(z.a,{responsive:!0,size:"sm",hover:!0,children:[Object(l.jsx)("thead",{children:Object(l.jsxs)("tr",{style:{color:f.color.primary},children:[Object(l.jsx)("th",{children:"District"}),Object(l.jsx)("th",{children:"Confirmed"}),Object(l.jsx)("th",{children:"Active"}),Object(l.jsx)("th",{children:"Recovered"}),Object(l.jsx)("th",{children:"Deceased"})]})}),Object(l.jsx)("tbody",{children:j.map((function(e,t){return Object(l.jsxs)("tr",{children:[Object(l.jsx)("th",{scope:"row",style:{color:f.color.primary},children:e}),Object(l.jsxs)("td",{style:{color:f.color.confirmed},children:[v(i[e].confirmed),Object(l.jsxs)("small",{style:{padding:f.padding.md},children:[" ",Object(l.jsx)(B.a,{})," ",v(i[e].delta.confirmed)]})]}),Object(l.jsx)("td",{style:{color:f.color.active},children:v(i[e].active)}),Object(l.jsxs)("td",{style:{color:f.color.recovered},children:[v(i[e].recovered),Object(l.jsxs)("small",{style:{padding:f.padding.md},children:[" ",Object(l.jsx)(B.a,{})," ",v(i[e].delta.recovered)]})]}),Object(l.jsxs)("td",{style:{color:f.color.deaths},children:[v(i[e].deceased),Object(l.jsxs)("small",{style:{padding:f.padding.md},children:[" ",Object(l.jsx)(B.a,{})," ",v(i[e].delta.deceased)]})]})]},t)}))})]})]}),Object(l.jsx)(m.a,{xs:2,sm:4,md:6,lg:8,xl:4})]})}var E=n.a.Content;function L(){return Object(l.jsx)(E,{style:{marginLeft:"5%",marginRight:"5%",marginTop:"2rem"},children:Object(l.jsx)("div",{className:"site-layout-background",children:Object(l.jsx)(j.a,{children:Object(l.jsxs)(x.c,{children:[Object(l.jsx)(x.a,{path:"/",component:I,exact:!0}),Object(l.jsx)(x.a,{path:"/about",component:R}),Object(l.jsx)(x.a,{path:"/resources",component:F}),Object(l.jsx)(x.a,{path:"/state-details/:name",component:N})]})})})})}function U(){return Object(l.jsxs)(n.a,{children:[Object(l.jsx)(L,{}),Object(l.jsx)(o,{})]})}var J=function(e){e&&e instanceof Function&&c.e(3).then(c.bind(null,173)).then((function(t){var c=t.getCLS,s=t.getFID,r=t.getFCP,a=t.getLCP,i=t.getTTFB;c(e),s(e),r(e),a(e),i(e)}))};c(160),c(161);i.a.render(Object(l.jsx)(r.a.StrictMode,{children:Object(l.jsx)(U,{})}),document.getElementById("root")),J()}},[[162,1,2]]]);
//# sourceMappingURL=main.d2990981.chunk.js.map